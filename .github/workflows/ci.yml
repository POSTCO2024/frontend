name: FE CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-common-ui:
    name: Lint Common UI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install --filter packages/common-ui
      - run: pnpm run lint --filter packages/common-ui
      - uses: actions/upload-artifact@v4
        with:
          name: common-ui-source
          path: packages/common-ui

  build-and-test-apps:
    name: Build and Test Apps
    needs: lint-common-ui
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [control, operation]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - uses: actions/download-artifact@v4
        with:
          name: common-ui-source
          path: packages/common-ui
      - run: pnpm install --filter apps/${{ matrix.service }}
      - run: pnpm run build --filter apps/${{ matrix.service }}
      - run: pnpm run test --filter apps/${{ matrix.service }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service }}-build
          path: apps/${{ matrix.service }}/dist

  deploy:
    name: Deploy
    needs: build-and-test-apps
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Upload apps to deployment S3
        run: |
          for service in control operation; do
            aws s3 sync ${service}-build s3://dev-${{ secrets.S3_BUCKET_NAME_PREFIX }}-${service}-app --delete
          done

      - name: Trigger CodePipeline
        run: |
          aws codepipeline start-pipeline-execution --name frontend-pipeline-dev

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"