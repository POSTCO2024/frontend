name: FE CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    name: Build and Test
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [control, operation]

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  

      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install
        working-directory: apps/${{ matrix.service }}
  
      - name: List files in current directory
        run: ls -alh
        working-directory: apps/${{ matrix.service }}

      - name: List files in assets/scss directory
        run: ls -alh apps/${{ matrix.service }}/assets/scss

      - name: Build ${{ matrix.service }}
        run: pnpm run build -- --debug
        working-directory: apps/${{ matrix.service }}

      - name: Test ${{ matrix.service }}
        run: pnpm test
        working-directory: apps/${{ matrix.service }}
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service }}-build
          path: apps/${{ matrix.service }}/dist

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Set DATE environment variable
        run: echo "DATE=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV
      
      - name: Upload to artifact S3
        run: |
          aws s3 sync apps/${{ matrix.service }}/dist s3://${{ secrets.ARTIFACT_BUCKET }}/${{ env.DATE }}/${{ matrix.service }} --delete

      - name: Upload to deployment S3
        run: |
          aws s3 sync apps/${{ matrix.service }}/dist s3://dev-${{ secrets.S3_BUCKET_NAME_PREFIX }}-${{ matrix.service }}-app --delete

      - name: Trigger CodePipeline
        run: |
          aws codepipeline start-pipeline-execution --name frontend-pipeline-dev

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"